name: Channels

on:
  workflow_dispatch:
    inputs:
      conda-version:
        description: 'Conda Version'
        required: true
        default: '23.1.0'
        type: choice
        options:
        - '23.1.0'
        - '22.11.1'
        - '22.11.0'
        - '22.9.0'
      conda-libmamba-version:
        description: 'conda-libmamba-solver Version'
        required: true
        default: '23.1.0'
        type: choice
        options:
        - '23.1.0'
        - '22.12.0'
        - '22.11.0'
      mamba-version:
        description: 'Mamba Version'
        required: true
        default: '2023.02.09'
        type: choice
        options:
        - '2023.02.09'
      verbosity:
        description: 'Verbosity'
        required: true
        default: '-vv'
        type: choice
        options:
        - ''
        - '-v'
        - '-vv'
        - '-vvv'
      channel:
        description: 'Channel'
        required: true
        default: 'conda-forge'
      packages:
        description: 'Packages (space separated)'
        required: true
        default: "numpy"

jobs:
  mamba:
    name: mamba=${{ inputs.mamba-version }}  os=${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@master

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
          channels: conda-forge
          mamba-version: ${{ inputs.mamba-version }}
          use-mamba: true

      - name: Conda Info
        shell: bash -el {0}
        run: |
          printf '{"channels": ["${{ inputs.channel }}"], "solver": "classic"}' > ~/.condarc
          mamba info
          mamba config --show
          mamba list

      - name: Create environment
        shell: bash -el {0}
        run: |
          mamba create -n test ${{ inputs.packages }} ${{ inputs.verbosity }}

      - name: List environment details
        shell: bash -el {0}
        run: |
          mamba list -n test

  conda:
    name: conda=${{ inputs.conda-version }} os=${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@master

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
          conda-version: ${{ inputs.conda-version }}

      - name: Conda Info
        shell: bash -el {0}
        run: |
          printf '{"channels": ["${{ inputs.channel }}"], "solver": "classic"}' > ~/.condarc
          conda info
          conda config --show
          conda list

      - name: Create environment
        shell: bash -el {0}
        run: |
          conda create -n test ${{ inputs.packages }} ${{ inputs.verbosity }}

      - name: List environment details
        shell: bash -el {0}
        run: |
          conda list -n test

  conda-libmamba-solver:
    name: conda-libmamba-solver=${{ inputs.conda-libmamba-version }} os=${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@master

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
          conda-version: ${{ inputs.conda-version }}

      - name: Installation
        shell: bash -el {0}
        run: conda install -c conda-forge conda-libmamba-solver==${{ inputs.conda-libmamba-version }}

      - name: Conda Info
        shell: bash -el {0}
        run: |
          printf '{"channels": ["${{ inputs.channel }}"], "solver": "libmamba"}' > ~/.condarc
          conda info
          conda config --show
          conda list

      - name: Create environment
        shell: bash -el {0}
        run: |
          conda create -n test ${{ inputs.packages }} ${{ inputs.verbosity }}

      - name: List environment details
        shell: bash -el {0}
        run: |
          conda list -n test
